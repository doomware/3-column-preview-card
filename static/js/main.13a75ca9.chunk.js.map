{"version":3,"sources":["components/Card.jsx","components/Attribution.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","img","alt","type","description","role","href","Attribution","target","rel","App","id","map","auto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAgBeA,MAbf,SAAcC,GACZ,OACE,cAAC,WAAD,UACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKF,EAAMG,IAAKC,IAAI,KACzB,oBAAIH,UAAU,aAAd,SAA4BD,EAAMK,OAClC,mBAAGJ,UAAU,YAAb,SAA0BD,EAAMM,cAChC,mBAAGC,KAAK,SAASC,KAAK,IAAtB,8B,MCOOC,MAdf,WACE,OACE,cAAC,WAAD,UACE,sBAAKR,UAAU,cAAf,yBAEE,mBAAGO,KAAK,8CAA8CE,OAAO,SAASC,IAAI,aAA1E,6BAFF,cAKa,mBAAGH,KAAK,8BAAR,sBALb,UC6CSI,MA3Cf,WA0BE,OACE,eAAC,WAAD,WACE,qBAAKX,UAAU,aAAf,SA1BI,CACJ,CACEI,KAAM,SACNC,YACE,6HACFH,IAAK,2BACLU,GAAI,GAEN,CACER,KAAM,OACNC,YACE,gIACFH,IAAK,yBACLU,GAAI,GAEN,CACER,KAAM,SACNC,YACE,+HACFH,IAAK,2BACLU,GAAI,IAOWC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAEEV,KAAMU,EAAKV,KACXC,YAAaS,EAAKT,YAClBH,IAAKY,EAAKZ,KAHLY,EAAKF,SAOhB,cAAC,EAAD,QClCSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.13a75ca9.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card\">\r\n        <img src={props.img} alt=\"\" />\r\n        <h3 className=\"card-title\">{props.type}</h3>\r\n        <p className=\"card-body\">{props.description}</p>\r\n        <a role=\"button\" href=\"#\">Learn More</a>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./Attribution.css\"\r\n\r\nfunction Attribution() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"attribution\">\r\n        Challenge by\r\n        <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noreferrer\">\r\n          Frontend Mentor\r\n        </a>\r\n        . Coded by <a href=\"https://github.com/doomware\">doomware</a>.\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Attribution;","import { Fragment } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card\";\nimport Attribution from \"./components/Attribution\";\n\n// https://www.pluralsight.com/guides/iterate-through-a-json-response-in-jsx-render-for-reactjs\n// https://developer.mozilla.org/es/docs/Web/CSS/:nth-child\n\nfunction App() {\n  const autoData = {\n    auto: [\n      {\n        type: \"Sedans\",\n        description:\n          \"Choose a sedan for its affordability and excellent fuel economy. Ideal for cruising in the city or on your next road trip.\",\n        img: \"./images/icon-sedans.svg\",\n        id: 1,\n      },\n      {\n        type: \"SUVs\",\n        description:\n          \"Take an SUV for its spacious interior, power, and versatility. Perfect for your next family vacation and off-road adventures.\",\n        img: \"./images/icon-suvs.svg\",\n        id: 2,\n      },\n      {\n        type: \"Luxury\",\n        description:\n          \"Cruise in the best car brands without the bloated prices. Enjoy the enhanced comfort of a luxury rental and arrive in style.\",\n        img: \"./images/icon-luxury.svg\",\n        id: 3,\n      },\n    ],\n  };\n  return (\n    <Fragment>\n      <div className=\"card-group\">\n        {autoData.auto.map((auto) => (\n          <Card\n            key={auto.id}\n            type={auto.type}\n            description={auto.description}\n            img={auto.img}\n          />\n        ))}\n      </div>\n      <Attribution/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}